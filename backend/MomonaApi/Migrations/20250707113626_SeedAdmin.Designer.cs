// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MomonaApi.DAL;

#nullable disable

namespace MomonaApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250707113626_SeedAdmin")]
    partial class SeedAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Enjoy a smooth evening of live jazz…",
                            ImageUrl = "/images/jazz.jpg",
                            IsHidden = false,
                            StartsAt = new DateTime(2025, 8, 17, 18, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Live Jazz Night"
                        });
                });

            modelBuilder.Entity("GameStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvailableCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentPlayer")
                        .HasColumnType("TEXT");

                    b.Property<string>("GameType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Queue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TakenAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableCount = 1,
                            GameType = "Pool",
                            Queue = "[]"
                        },
                        new
                        {
                            Id = 2,
                            AvailableCount = 1,
                            GameType = "Foosball",
                            Queue = "[]"
                        },
                        new
                        {
                            Id = 3,
                            AvailableCount = 1,
                            GameType = "Cards",
                            Queue = "[]"
                        });
                });

            modelBuilder.Entity("MomonaApi.Model.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "super@momona.no",
                            FirstName = "Super",
                            IsAdmin = true,
                            LastName = "Admin",
                            PasswordHash = "jjstgzC1Lh2KzDo+VnyFgQ==.vJlCIKopaSeYMGy3ZancCzbR1qDNChdAetVBszetPME="
                        });
                });

            modelBuilder.Entity("MomonaApi.Model.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
